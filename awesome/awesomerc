-- Standard awesome library
require("awful")
require("awful.autofocus")
require("awful.rules")
-- Variables definition
require("variables")
-- Theme handling library
require("beautiful")
-- Notification library
require("naughty")
-- Plugins
require("shifty")
--require("vicious")
require("teardrop")
-- Tags definition
require("tags")
-- Menu declaration
require("menu")
require("debian.menu")
-- Bindings
require("bindings")

-- {{{ Wibox creation
-- Systray widget
mysystray = widget({type = "systray"})

-- Variables
mywibox		= {}
colorbar	= {}
mytaskbar	= {}
mypromptbox	= {}
mylayoutbox	= {}

-- Taglist
mytaglist	= {}
mytaglist.buttons = awful.util.table.join(
awful.button({}, 1, awful.tag.viewonly),
awful.button({modkey}, 1, awful.client.movetotag),
awful.button({}, 3, awful.tag.viewtoggle),
awful.button({modkey}, 3, awful.client.toggletag),
awful.button({}, 4, awful.tag.viewnext),
awful.button({}, 5, awful.tag.viewprev)
)

-- Widgets
separator = widget({type = 'textbox', name = "separator"})
--separator.text = " "
--datewidget = widget({type = 'textbox', name='datewidget'})
--vicious.register(datewidget, vicious.widgets.date, '<span color="' .. beautiful.fg_focus .. '">%b %d, %R</span>', 30)

-- Tasklist
mytasklist	= {}
mytasklist.buttons = awful.util.table.join(
-- Button 1
awful.button({ }, 1, function (c)
	if not c:isvisible() then
		awful.tag.viewonly(c:tags()[1])
	end
	client.focus = c
	c:raise()
end),

-- Button 3
awful.button({ }, 3, function ()
	if instance then
		instance:hide()
		instance = nil
	else
		instance = awful.menu.clients({ width=250 })
	end
end),

-- Button 4
awful.button({ }, 4, function ()
	awful.client.focus.byidx(1)
	if client.focus then client.focus:raise() end
end),

-- Button 5
awful.button({ }, 5, function ()
	awful.client.focus.byidx(-1)
	if client.focus then client.focus:raise() end
end)
)

-- Wibox creation
for s = 1, screen.count() do
	-- Create a taglist widget
	mytaglist[s] = awful.widget.taglist(s, awful.widget.taglist.label.all, mytaglist.buttons)
	-- Create a tasklist widget
	mytasklist[s] = awful.widget.tasklist(function(c)
		return awful.widget.tasklist.label.currenttags(c, s)
	end, mytasklist.buttons)
	-- Create the wibox

	if screen == 1 then
		colorbar[s] = awful.wibox({position = "top", screen = s, height = 28, border_width = 0, border_color = "#191b1cff"})
		colorbar[s].widgets =
		{
			mytasklist[s],
			layout = awful.widget.layout.vertical.flex	
		}
		colorbar[s].screen = s

		mywibox[s] = awful.wibox({position = "top", screen = s, height = 24})
		mywibox[s].widgets =
		{
			separator,
			mytaglist[s],
			mylauncher,
			layout = awful.widget.layout.horizontal.rightleft
		}
		mywibox[s].screen = s

	else
		colorbar[s] = awful.wibox({position = "top", screen = s, height = 28, border_width = 0, border_color = "#191b1cff"})
		colorbar[s].widgets =
		{
			mytasklist[s],
			layout = awful.widget.layout.vertical.flex	
		}
		colorbar[s].screen = s
	
		mywibox[s] = awful.wibox({position = "top", screen = s, height = 24})
		mywibox[s].widgets =
		{
			separator,
			mytaglist[s],
			mylauncher,
			layout = awful.widget.layout.horizontal.leftright
		}
		mywibox[s].screen = s
	end
end

-- }}}
-- {{{ Rules
awful.rules.rules = {
	-- All clients will match this rule.
	{ rule = { },
	properties = { border_width = beautiful.border_width,
	border_color = beautiful.border_normal,
	focus = true,
	keys = clientkeys,
	buttons = clientbuttons } },
}
-- }}}
-- {{{ Signals
-- Signal function to execute when a new client appears.
client.add_signal("manage", function (c, startup)
	-- Add a titlebar
	-- awful.titlebar.add(c, { modkey = modkey })

	-- Enable sloppy focus
	c:add_signal("mouse::enter", function(c)
		if awful.layout.get(c.screen) ~= awful.layout.suit.magnifier
			and awful.client.focus.filter(c) then
			client.focus = c
		end
	end)

	c:add_signal("marked", function(c)
		c.border_color = beautiful.border_marked
	end)
	c:add_signal("unmarked", function(c)
		c.border_color = beautiful.border_focus
	end)


	if not startup then
		-- Set the windows at the slave,
		-- i.e. put it at the end of others instead of setting it master.
		-- awful.client.setslave(c)

		-- Put windows in a smart way, only if they does not set an initial position.
		if not c.size_hints.user_position and not c.size_hints.program_position then
			awful.placement.no_overlap(c)
			awful.placement.no_offscreen(c)
		end
	end
end)


client.add_signal("focus", function(c)
	-- if use_composite then c.opacity = 1.0 end
	c.opacity = 1.0
	c.border_color = beautiful.border_focus
end)
client.add_signal("unfocus", function(c)
	--if use_composite then c.opacity = 0.5 end
	c.border_color = beautiful.border_normal
	--	c.border_opacity = 0.0
	c.opacity = 1.0
end)
-- }}}
